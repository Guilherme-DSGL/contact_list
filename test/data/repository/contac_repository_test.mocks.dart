// Mocks generated by Mockito 5.4.2 from annotations
// in listacontatos/test/data/repository/contac_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:listacontatos/core/network/network_info/network_info.dart'
    as _i3;
import 'package:listacontatos/data/models/contact.dart' as _i2;
import 'package:listacontatos/data/source/local/local_source.dart' as _i6;
import 'package:listacontatos/data/source/remote/remote_source.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeContact_0 extends _i1.SmartFake implements _i2.Contact {
  _FakeContact_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i3.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConected => (super.noSuchMethod(
        Invocation.getter(#isConected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [RemoteSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteSource extends _i1.Mock implements _i5.RemoteSource {
  MockRemoteSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Contact>> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Contact>>.value(<_i2.Contact>[]),
      ) as _i4.Future<List<_i2.Contact>>);
  @override
  _i4.Future<_i2.Contact> post({required _i2.Contact? body}) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {#body: body},
        ),
        returnValue: _i4.Future<_i2.Contact>.value(_FakeContact_0(
          this,
          Invocation.method(
            #post,
            [],
            {#body: body},
          ),
        )),
      ) as _i4.Future<_i2.Contact>);
}

/// A class which mocks [LocalSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalSource extends _i1.Mock implements _i6.LocalSource {
  MockLocalSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> cache({required List<_i2.Contact>? contact}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cache,
          [],
          {#contact: contact},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i2.Contact>> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Contact>>.value(<_i2.Contact>[]),
      ) as _i4.Future<List<_i2.Contact>>);
}
